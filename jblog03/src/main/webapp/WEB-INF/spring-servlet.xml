<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd">
		
	<!-- Auto Proxy -->
	<aop:aspectj-autoproxy />

	<!-- <mvc:default-servlet-handler/> 설명 이 코드는 만약 Handler Mapping에 해당하는 URL이 
		없으면 default-servlet으로 처리하겠다는 의미. 즉 매핑이 되지 않은 URL은 webapp폴더를 시작으로 경로를 찾아가게 
		되고, 여기에서도 해당 경로의 자원이 존재하지 않으면 404 Not found가 발생. <mvc:annotation-driven/> 
		같이 사용하는 이유 정적 파일의 경로를 작성할 때 자신의 애플리케이션 경로를 프로젝트 폴더 이름으로 작성하는 것 말고, JSTL 표기법으로 
		작성할 수도 있다. ex)${pageContext.request.contextPath} -->
	<!-- validator, conversionService, messageConverter를 자동으로 등록 -->
	<mvc:annotation-driven />

	<!-- 서블릿 컨테이너의 디폴트 서블릿 위임 핸들러 -->
	<mvc:default-servlet-handler />

	<!-- ViewResolver 설정 -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- 어노테이션 설정: 자동(auto) 빈(Bean) 스캐닝(Scanning) -->
	<context:annotation-config />
	<context:component-scan
		base-package="com.douzone.jblog.controller" />

	<!-- Message Resource(회원가입화면 형식 error 메세지)-->
	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>messages/messages_ko</value>
			</list>
		</property>
	</bean>
	
	<!-- Interceptors -->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/user/auth"/>
			<bean class="com.douzone.jblog.security.LoginInterceptor" />
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/user/logout" />
			<bean class="com.douzone.jblog.security.LogoutInterceptor" />
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/**"/>
			<mvc:exclude-mapping path="/assets/**"/>
			<mvc:exclude-mapping path="/user/auth"/>
			<mvc:exclude-mapping path="/user/logout"/>
			<bean class="com.douzone.jblog.security.AuthInterceptor" />
		</mvc:interceptor>

	</mvc:interceptors>
	
	<!-- validator, conversionService, messageConverter를 자동으로 등록 -->
	<mvc:annotation-driven>
		<!-- Argument Resolver -->
		<mvc:argument-resolvers>
			<bean class="com.douzone.jblog.security.AuthUserHandlerMethodArgumentResolver" />
		</mvc:argument-resolvers>
	</mvc:annotation-driven>
	
	<!-- MVC Resource Mapping -->
	<mvc:resources mapping="/assets/blog/**" location="file:/jblog-uploads/"  />
	
	<!-- Mutipart Resolver -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	    <property name="maxUploadSize" value="52428800" />
	    <!-- property name="maxInMemorySize" value="1024000" /-->
	    <property name="defaultEncoding" value="utf-8" />
	</bean>
</beans>